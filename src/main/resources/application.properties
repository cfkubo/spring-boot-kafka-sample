# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
kafka.topic.name=${KAFKA_TOPIC:test-topic}
kafka.group.id=${KAFKA_GROUP_ID:test-group}

# Admin Configuration
spring.kafka.admin.properties.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.admin.properties.request.timeout.ms=20000
spring.kafka.admin.properties.retries=5

# Consumer Configuration
spring.kafka.consumer.group-id=${kafka.group.id}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all

# Actuator Configuration
management.endpoints.web.exposure.include=health,metrics,prometheus,loggers
management.endpoint.health.show-details=always

# Metrics Configuration
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Tracing Configuration
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# Swagger Configuration
springfox.documentation.swagger.v2.path=/api-docs
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Server configuration
server.port=9898

# Logging Configuration
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
spring.application.name=kafka-app
logging.file.path=logs
logging.file.name=${logging.file.path}/application.log
logging.level.root=INFO
logging.level.com.example=DEBUG
logging.level.org.apache.kafka=INFO